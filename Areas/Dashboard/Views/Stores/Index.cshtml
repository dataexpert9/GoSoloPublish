@model BasketWebPanel.BindingModels.HotelBindingModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<style>
    /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
    #map {
        height: 392px;
        width: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
    }

    #infowindow-content .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }

    .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
    }

    #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
    }

    .pac-controls {
        display: inline-block;
        padding: 5px 11px;
    }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

    #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
    }

    .table caption + thead tr:first-child th,
    .table colgroup + thead tr:first-child th,
    .table thead:first-child tr:first-child th,
    .table caption + thead tr:first-child td,
    .table colgroup + thead tr:first-child td,
    .table thead:first-child tr:first-child td {
        border-top: 0 !important;
        text-align: center !important;
        vertical-align: central !important;
    }

    .table-responsive {
        border: 0px;
    }


    .addressArea {
        width: 513px;
        height: 97px;
        min-height: 120px;
        min-width: 514px;
        max-height: 120px;
        max-width: 513px;
    }
</style>
<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-xs-12">
            <div class="alert alert-success" id="success-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong></strong><span> </span>
            </div>
            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong><span></span>
            </div>
            @*<input type="hidden" id="hdnRole" value="@Model.Role">*@
            @using (Ajax.BeginForm("Index", "Stores", new AjaxOptions { OnSuccess = "OnSuccessStoreInsertion", OnFailure = "OnFailedInsertion", LoadingElementId = "divLoader" }))

            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Hotel.Id)

                <div class="x_panel">
                    <div class="x_title">
                        @if (Model.Id == 0)
                        {
                            <h3>Add New Hotel</h3>
                        }
                        else
                        {
                            <h3>Edit Hotel</h3>
                        }
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <br />

                        <div class="row">
                            <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                <label>Hotel Name</label>
                                <input type="text" autofocus data-val="true" class="form-control input-validation-error" name="Hotel.Name" id="StoreName" data-val-required="This field is required" placeholder="Hotel Name" value="@Model.Hotel.Name">
                            </div>
                            <input type="text" name="Hotel.Id" value="@Model.Hotel.Id" hidden>

                            <label>Food Options</label>
                            <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">

                                <div class="material-switch pull-right" onclick="breakfast()">
                                    <input checked data-toggle="toggle" data-on="BreakFast" data-off="No BreakFasts" id="breakfastCheckbox" data-onstyle="success" type="checkbox">
                                    <input type="text" name="Hotel.Is_Breakfast" id="breakfastField" value="@Model.Hotel.Is_Breakfast" hidden />
                                </div>
                                <div class="material-switch pull-right" onclick="lunch()">
                                    <input checked data-toggle="toggle" data-on="Lunch" data-off="No Lunch" id="lunchCheckbox" data-onstyle="success" type="checkbox">
                                    <input type="text" name="Hotel.Is_Lunch" value="@Model.Hotel.Is_Lunch" id="lunchField" hidden />

                                </div>
                                <div class="material-switch pull-right" onclick="dinner()">
                                    <input checked data-toggle="toggle" data-on="Dinner" data-off="No Dinner" id="dinnerCheckbox" data-onstyle="success" type="checkbox">
                                    <input type="text" name="Hotel.Is_Dinner" id="dinnerField" value="@Model.Hotel.Is_Dinner" hidden />

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <label>Province</label>
                                <input type="text" class="form-control" name="Hotel.Province" id="StoreName" placeholder="Province" value="@Model.Hotel.Province" />

                            </div>
                            <div class="col-md-6 col-sm-12">
                                <label>State</label>
                                <input type="text" class="form-control" name="Hotel.State" id="StoreName" placeholder="State" value="@Model.Hotel.State" />
                            </div>

                        </div>

                        <div class="col-md-6 col-sm-6">
                            <label>Address</label>
                            <input type="text" class="form-control" name="Hotel.Address" id="StoreName" placeholder="Hotel Complete Address" value="@Model.Hotel.Address" />
                        </div>


                        <div class="col-xs-6 col-md-6 col-xs-6">
                            <!-- image-preview-filename input [CUT FROM HERE]-->
                            @*@if (Model.Product.Id == 0)
                                {*@
                            <div id="UploadImage" hidden>
                                <label>Upload Driver Image</label>
                                <div>
                                    <div class="input-group image-preview" style="margin-bottom:0px">
                                        <input type="text" name="Product.Image" id="txtImageUrl" data-val="true" data-val-required="Please select an image" class="form-control image-preview-filename input-validation-error" readonly> <!-- don't give a name === doesn't send on POST/GET -->
                                        <span class="input-group-btn">
                                            <!-- image-preview-clear button -->
                                            <button type="button" id="clearImage" class="btn btn-default image-preview-clear" onclick="ClearImage()" style="display:none;">
                                                <span class="glyphicon glyphicon-remove"></span> Clear
                                            </button>
                                            <!-- image-preview-input -->
                                            <div class="btn btn-default image-preview-input">
                                                <span class="glyphicon glyphicon-folder-open"></span>
                                                <span class="image-preview-input-title">Browse</span>
                                                <input type="file" accept="image/png, image/jpeg, image/gif" onchange="UploadImage()" id="fileInput" name="Image" /> <!-- rename it -->
                                            </div>
                                        </span>
                                    </div>


                                </div>

                                <!-- /input-group image-preview [TO HERE]-->
                            </div>
                            @*}
                                else
                                {*@
                            <div id="EditImage" hidden>
                                <label>Hotel Image</label>
                                <div class="row">
                                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                        <img src="@ApiCall.BaseUrl@Model.Hotel.ImageUrl" alt="" width="48" height="48">
                                    </div>
                                </div>
                                @* <button id="btnEditImg" onclick="EditDivDeletePic()" title="Edit" class="btn btn-primary btn-xs editButtons" data-title="Edit" data-productid="8" data-toggle="modal" data-target="#edit"><span class="glyphicon glyphicon-pencil"></span></button>*@
                                <button id="btnDeleteImg" title="Delete" onclick="EditDivDeletePic()" class="btn btn-danger btn-xs deleteButtons" data-title="Delete" data-productid="8" data-toggle="modal" data-target="#deleteModal"><span class="glyphicon glyphicon-trash"></span></button>


                                <div hidden id="HasImage1">@Model.Hotel.ImageUrl</div>
                            </div>



                        </div>
                        <span style="padding-left:10px" id="ImageError" class="text-danger"></span>





                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <label>City</label>
                                <input type="text" class="form-control" name="Hotel.City" id="StoreName" placeholder="City Name" value="@Model.Hotel.City" />
                            </div>
                            <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                <label>Rooms</label>
                                <input type="text" class="form-control" name="Hotel.Rooms" id="StoreName" placeholder="Hotel Total Rooms" value="@Model.Hotel.Rooms" />
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-12">
                            <div class="row">
                                <div class="col-md-6 col-sm-12">
                                    <label class="control-label" for="OpeningTime" title="">Opening Time</label>
                                    <div class='input-group date'>
                                        <input type='text' class="form-control " id="timepicker15" name="Store.Open_From" value="@Model.Hotel.Open_From" />
                                        <span class="input-group-addon open-timepicker15">
                                            <span class="glyphicon glyphicon-time "></span>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <label class="control-label" for="ClosingTime" title="">Closing Time</label>
                                    <div class='input-group date'>
                                        <input type='text' class="form-control " id="timepicker16" name="Store.Open_To" value="@Model.Hotel.Open_To" />
                                        <span class="input-group-addon open-timepicker16">
                                            <span class="glyphicon glyphicon-time "></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    @*<div class="ln_solid"></div>*@
                    <div class="form-group">
                        <div class="col-md-12 col-sm-12 col-xs-12 text-right">
                            <button class="btn btn-primary" onclick="OnResetClick()" type="reset">Reset</button>
                            <button type="submit" class="btn btn-success">Submit</button>
                        </div>
                        <br>
                    </div>
                    @*</form>*@
                </div>
                @Html.ValidationMessage("Error")
            }

            @*@Html.Partial("_AddStore")*@
        </div>
    </div>
</div>



<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>

<script>

    function breakfast() {
        if ($("#breakfastField").val() == "true") {
            $("#breakfastField").val("false");
        } else {
            $("#breakfastField").val("true");
        }
    }
    function lunch() {
        if ($("#lunchField").val() == "true") {
            $("#lunchField").val("false");
        } else {
            $("#lunchField").val("true");
        }
    }
    function dinner() {
        if ($("#dinnerField").val() == "true") {
            $("#dinnerField").val("false");
        } else {
            $("#dinnerField").val("true");
        }
    }
    function EditDivDeletePic() {
        $('#EditImage').hide();
        $('#UploadImage').show();
        DeleteImageOnEdit();
    }

  function UploadImage() {
        var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        //Iterating through each files selected in fileInput
        var file = fileInput.files[0];
        //for (i = 0; i < fileInput.files.length; i++) {
        //    //Appending each file to FormData object
        //    formdata.append(fileInput.files[i].name, fileInput.files[i]);
        //}
        formdata.append(file.name, file);
        if (AllowedFileTypes.indexOf(file.type) == -1) {
            $("#ImageError").text("Only .Jpeg & .Png files are allowed.");
            $("#clearImage").trigger("click");
            return false;
        }
        else {
            $("#ImageError").text("");
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            xhr.open('POST', 'Stores/UploadImage');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    //alert(xhr.responseText);
                    document.getElementById("errImageUrl").innerHTML = '';
                    //$('.field-validation-error').inn.hide();
                }
            }
            return false;
        }
    }

    function ClearImage() {
        var xhr = new XMLHttpRequest();
        xhr.open('POST', 'Stores/DeleteImage');
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }

    function DeleteImageOnEdit() {

        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("DeleteImage", "Stores")'
        xhr.open('POST', url);
        xhr.send("Clear");
        $("#txtImageUrl").val('');
    }



    function EditDivDeletePic() {

        $('#EditImage').hide();
        $('#UploadImage').show();
        DeleteImageOnEdit();
    }

    //google.maps.event.addListener(map, 'bounds_changed', function () {
    //    alert(map.getBounds());
    //});
    function OnSuccessStoreInsertion() {
        if ($('#hdnRole').val() == "SubAdmin") {
            $("#success-alert span").text("The hotel has been updated successfully.");
            $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                $("#success-alert").slideUp(500);
            });
        }
        else {
            window.location.href = "@Url.Action("ManageStores", "Stores")";
        }
        //$("#success-alert").append("Store updated successfully.");
        //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
        //    $("#success-alert").slideUp(500);
        //});
        //if ($('#hdnRole').val() == "SubAdmin")
        //    return;
        //$("#StoreName").val('');
        //$("#Longitude").val('');
        //$("#Latitude").val('');
        //$("#clearImage").trigger("click");
        //$("#EditImage").hide();
        //$("#UploadImage").show();
    }

    $(document).ready(function () {

        var storeId = $("#Store_Id").val();
        var editImageVal = $('#HasImage1').text();
        if (storeId == "" || editImageVal == "") {
            $('#EditImage').hide();
            $('#UploadImage').show();
        }
        else {
            $('#EditImage').show();
            $('#UploadImage').hide();
            $("#txtImageUrl").val(editImageVal);
        }

        //$('input[id$=Longitude]').bind("change", function () {
        //    var a = $('span[data-valmsg-for="Long"]').empty();
        //});
        //$('input[id$=Latitude]').bind("change", function () {
        //    var a = $('span[data-valmsg-for="Lat"]').empty();
        //});
    });
</script>
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQsM3CYgTwF_35w-Qc2N8FlZGDfKASYsU&callback=initMap&libraries=places"
    type="text/javascript"></script>*@

<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>



